// Generated by CoffeeScript 1.3.1
(function() {
  var disableHighlighting, enableHighlighting, highlighter, init;

  init = function() {
    var stateChangesListener;
    stateChangesListener = function(request, sender, sendResponse) {
      var actionsRecorder, matchersRecorder, options;
      options = {
        scope: document,
        afterCapture: function(dataAsJSON) {
          return chrome.extension.sendRequest({
            name: 'captured',
            data: dataAsJSON
          });
        }
      };
      actionsRecorder = new Capybara.Recorders.Actions(options);
      matchersRecorder = new Capybara.Recorders.Matchers(options);
      switch (request.state) {
        case 'capture.actions':
          return actionsRecorder.start();
        case 'capture.matchers':
          actionsRecorder.stop();
          matchersRecorder.start();
          return enableHighlighting();
        case 'generate':
          matchersRecorder.stop();
          return disableHighlighting();
      }
    };
    return chrome.extension.onRequest.addListener(stateChangesListener);
  };

  highlighter = null;

  enableHighlighting = function() {
    var _this = this;
    highlighter || (highlighter = new SelectionBox);
    return $(document).on('mousemove.highlight', function(e) {
      e.preventDefault();
      e.stopPropagation();
      $('body').css('cursor', 'crosshair');
      return highlighter.highlight(e.target);
    });
  };

  disableHighlighting = function() {
    $(document).off('mousemove.highlight');
    $('body').css('cursor', '');
    return highlighter.hide();
  };

  $(document).ready(init);

}).call(this);
