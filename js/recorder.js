// Generated by CoffeeScript 1.3.1
(function() {
  var init;

  init = function() {
    var stateChangesListener;
    stateChangesListener = function(request, sender, sendResponse) {
      var actionsRecorder, matchersRecorder, options;
      options = {
        scope: document,
        afterCapture: function(dataAsJSON) {
          return chrome.extension.sendRequest({
            name: 'captured',
            data: dataAsJSON
          });
        }
      };
      actionsRecorder = new Capybara.Recorders.Actions(options);
      matchersRecorder = new Capybara.Recorders.Matchers(options);
      switch (request.state) {
        case 'capture.actions':
          return actionsRecorder.start();
        case 'capture.matchers':
          actionsRecorder.stop();
          return matchersRecorder.start();
        case 'generate':
          return matchersRecorder.stop();
      }
    };
    return chrome.extension.onRequest.addListener(stateChangesListener);
  };

  $(document).ready(init);

  /*
  @highlighter = new SelectionBox
  
    _enableHighlighting: ->
      $(document).on ['mousemove', @namespace].join('.'), (e) =>
        e.preventDefault()
        e.stopPropagation()
        $('body').css('cursor', 'crosshair')
        @highlighter.highlight(e.target)
  
    _disableHighlighting: ->
      $(document).off ['mousemove', @namespace].join('.')
      $('body').css('cursor', '')
      @highlighter.hide()
  */


}).call(this);
